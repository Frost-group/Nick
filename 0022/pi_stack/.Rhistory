mutate(RDF=RDF*3) %>%
mutate(time="between 20ns and 30ns")
rbind(before, after) %>%
filter(r<5 & r>3) %>%
ggplot(aes(x=r, y=RDF, color=time)) +
geom_line(size=1) +
theme_classic() +
ggsave("RDF_before.pdf", width=14)
aft <- read_pdb2("NPT_30000ps.pdb") %>%
select(AtomName, ResNum, x, y, z) %>%
filter(AtomName=="SS"|AtomName=="CS2"|AtomName=="CS3") %>%
group_by(ResNum) %>%
nest()  %>%
mutate(temp = map(data,find_plane)) %>% print()
library("tidyverse")
library("Rpdb")
########################################################################################
########################################################################################
source("~/Dropbox/library/R_functions.R")
########################################################################################
########################################################################################
find_plane <- function(data){
v1x <- data[[2,2]] - data[[1,2]]
v1y <- data[[2,3]] - data[[1,3]]
v1z <- data[[2,4]] - data[[1,4]]
v2x <- data[[3,2]] - data[[2,2]]
v2y <- data[[3,3]] - data[[2,3]]
v2z <- data[[3,4]] - data[[2,4]]
v1 <- matrix(c(v1x, v1y, v1z),nrow=3,ncol=1)
v2 <- matrix(c(v2x, v2y, v2z),nrow=3,ncol=1)
return(v1)
}
before <- read.table("pi_before.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(time="at t=0")
after <- read.table("pi_after.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(RDF=RDF*3) %>%
mutate(time="between 20ns and 30ns")
rbind(before, after) %>%
filter(r<5 & r>3) %>%
ggplot(aes(x=r, y=RDF, color=time)) +
geom_line(size=1) +
theme_classic() +
ggsave("RDF_before.pdf", width=14)
aft <- read_pdb2("NPT_30000ps.pdb") %>%
select(AtomName, ResNum, x, y, z) %>%
filter(AtomName=="SS"|AtomName=="CS2"|AtomName=="CS3") %>%
group_by(ResNum) %>%
nest()  %>%
mutate(temp = map(data,find_plane)) %>% print()
View(aft)
library("tidyverse")
library("Rpdb")
########################################################################################
########################################################################################
source("~/Dropbox/library/R_functions.R")
########################################################################################
########################################################################################
find_plane <- function(data){
v1x <- data[[2,2]] - data[[1,2]]
v1y <- data[[2,3]] - data[[1,3]]
v1z <- data[[2,4]] - data[[1,4]]
v2x <- data[[3,2]] - data[[2,2]]
v2y <- data[[3,3]] - data[[2,3]]
v2z <- data[[3,4]] - data[[2,4]]
v1 <- matrix(c(v1x, v1y, v1z),nrow=3,ncol=1)
v2 <- matrix(c(v2x, v2y, v2z),nrow=3,ncol=1)
n <- crossprod(v1,v2)
return(v1)
}
before <- read.table("pi_before.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(time="at t=0")
after <- read.table("pi_after.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(RDF=RDF*3) %>%
mutate(time="between 20ns and 30ns")
rbind(before, after) %>%
filter(r<5 & r>3) %>%
ggplot(aes(x=r, y=RDF, color=time)) +
geom_line(size=1) +
theme_classic() +
ggsave("RDF_before.pdf", width=14)
aft <- read_pdb2("NPT_30000ps.pdb") %>%
select(AtomName, ResNum, x, y, z) %>%
filter(AtomName=="SS"|AtomName=="CS2"|AtomName=="CS3") %>%
group_by(ResNum) %>%
nest()  %>%
mutate(temp = map(data,find_plane)) %>% print()
library("tidyverse")
library("Rpdb")
########################################################################################
########################################################################################
source("~/Dropbox/library/R_functions.R")
########################################################################################
########################################################################################
find_plane <- function(data){
v1x <- data[[2,2]] - data[[1,2]]
v1y <- data[[2,3]] - data[[1,3]]
v1z <- data[[2,4]] - data[[1,4]]
v2x <- data[[3,2]] - data[[2,2]]
v2y <- data[[3,3]] - data[[2,3]]
v2z <- data[[3,4]] - data[[2,4]]
v1 <- matrix(c(v1x, v1y, v1z),nrow=3,ncol=1)
v2 <- matrix(c(v2x, v2y, v2z),nrow=3,ncol=1)
n <- crossprod(v1,v2)
return(n)
}
before <- read.table("pi_before.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(time="at t=0")
after <- read.table("pi_after.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(RDF=RDF*3) %>%
mutate(time="between 20ns and 30ns")
rbind(before, after) %>%
filter(r<5 & r>3) %>%
ggplot(aes(x=r, y=RDF, color=time)) +
geom_line(size=1) +
theme_classic() +
ggsave("RDF_before.pdf", width=14)
aft <- read_pdb2("NPT_30000ps.pdb") %>%
select(AtomName, ResNum, x, y, z) %>%
filter(AtomName=="SS"|AtomName=="CS2"|AtomName=="CS3") %>%
group_by(ResNum) %>%
nest()  %>%
mutate(temp = map(data,find_plane)) %>% print()
View(aft)
library("tidyverse")
library("Rpdb")
########################################################################################
########################################################################################
source("~/Dropbox/library/R_functions.R")
########################################################################################
########################################################################################
find_plane <- function(data){
v1x <- data[[2,2]] - data[[1,2]]
v1y <- data[[2,3]] - data[[1,3]]
v1z <- data[[2,4]] - data[[1,4]]
v2x <- data[[3,2]] - data[[2,2]]
v2y <- data[[3,3]] - data[[2,3]]
v2z <- data[[3,4]] - data[[2,4]]
v1 <- matrix(c(v1x, v1y, v1z),nrow=3,ncol=1)
v2 <- matrix(c(v2x, v2y, v2z),nrow=1,ncol=3)
n <- crossprod(v1,v2)
return(n)
}
before <- read.table("pi_before.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(time="at t=0")
after <- read.table("pi_after.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(RDF=RDF*3) %>%
mutate(time="between 20ns and 30ns")
rbind(before, after) %>%
filter(r<5 & r>3) %>%
ggplot(aes(x=r, y=RDF, color=time)) +
geom_line(size=1) +
theme_classic() +
ggsave("RDF_before.pdf", width=14)
aft <- read_pdb2("NPT_30000ps.pdb") %>%
select(AtomName, ResNum, x, y, z) %>%
filter(AtomName=="SS"|AtomName=="CS2"|AtomName=="CS3") %>%
group_by(ResNum) %>%
nest()  %>%
mutate(temp = map(data,find_plane)) %>% print()
library("tidyverse")
library("Rpdb")
########################################################################################
########################################################################################
source("~/Dropbox/library/R_functions.R")
########################################################################################
########################################################################################
find_plane <- function(data){
v1x <- data[[2,2]] - data[[1,2]]
v1y <- data[[2,3]] - data[[1,3]]
v1z <- data[[2,4]] - data[[1,4]]
v2x <- data[[3,2]] - data[[2,2]]
v2y <- data[[3,3]] - data[[2,3]]
v2z <- data[[3,4]] - data[[2,4]]
v1 <- matrix(c(v1x, v1y, v1z),nrow=3,ncol=1)
v2 <- matrix(c(v2x, v2y, v2z),nrow=1,ncol=3)
n <- v1 %*% v2
return(n)
}
before <- read.table("pi_before.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(time="at t=0")
after <- read.table("pi_after.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(RDF=RDF*3) %>%
mutate(time="between 20ns and 30ns")
rbind(before, after) %>%
filter(r<5 & r>3) %>%
ggplot(aes(x=r, y=RDF, color=time)) +
geom_line(size=1) +
theme_classic() +
ggsave("RDF_before.pdf", width=14)
aft <- read_pdb2("NPT_30000ps.pdb") %>%
select(AtomName, ResNum, x, y, z) %>%
filter(AtomName=="SS"|AtomName=="CS2"|AtomName=="CS3") %>%
group_by(ResNum) %>%
nest()  %>%
mutate(temp = map(data,find_plane)) %>% print()
library("tidyverse")
library("Rpdb")
########################################################################################
########################################################################################
source("~/Dropbox/library/R_functions.R")
########################################################################################
########################################################################################
find_plane <- function(data){
x <- data$x
y <- data$y
z <- data$z
v1 <- c(x[2]-x[1], y[2]-y[1], z[2]-z[1])
return(v1)
}
before <- read.table("pi_before.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(time="at t=0")
after <- read.table("pi_after.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(RDF=RDF*3) %>%
mutate(time="between 20ns and 30ns")
rbind(before, after) %>%
filter(r<5 & r>3) %>%
ggplot(aes(x=r, y=RDF, color=time)) +
geom_line(size=1) +
theme_classic() +
ggsave("RDF_before.pdf", width=14)
aft <- read_pdb2("NPT_30000ps.pdb") %>%
select(AtomName, ResNum, x, y, z) %>%
filter(AtomName=="SS"|AtomName=="CS2"|AtomName=="CS3") %>%
group_by(ResNum) %>%
nest()  %>%
mutate(temp = map(data,find_plane)) %>% print()
View(aft[[2]][[1]])
library("tidyverse")
library("Rpdb")
########################################################################################
########################################################################################
source("~/Dropbox/library/R_functions.R")
########################################################################################
########################################################################################
find_plane <- function(data){
x <- data$x
y <- data$y
z <- data$z
v1 <- c(x[2]-x[1], y[2]-y[1], z[2]-z[1])
v2 <- c(x[3]-x[1], y[3]-y[1], z[3]-z[1])
return(v1)
}
before <- read.table("pi_before.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(time="at t=0")
after <- read.table("pi_after.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(RDF=RDF*3) %>%
mutate(time="between 20ns and 30ns")
rbind(before, after) %>%
filter(r<5 & r>3) %>%
ggplot(aes(x=r, y=RDF, color=time)) +
geom_line(size=1) +
theme_classic() +
ggsave("RDF_before.pdf", width=14)
aft <- read_pdb2("NPT_30000ps.pdb") %>%
select(AtomName, ResNum, x, y, z) %>%
filter(AtomName=="SS"|AtomName=="CS2"|AtomName=="CS3") %>%
group_by(ResNum) %>%
nest()  %>%
mutate(temp = map(data,find_plane)) %>% print()
library("tidyverse")
library("Rpdb")
########################################################################################
########################################################################################
source("~/Dropbox/library/R_functions.R")
########################################################################################
########################################################################################
find_plane <- function(data){
x <- data$x
y <- data$y
z <- data$z
v1 <- c(x[2]-x[1], y[2]-y[1], z[2]-z[1])
v2 <- c(x[3]-x[1], y[3]-y[1], z[3]-z[1])
n <- crossprod(v1,v2)
return(n)
}
before <- read.table("pi_before.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(time="at t=0")
after <- read.table("pi_after.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(RDF=RDF*3) %>%
mutate(time="between 20ns and 30ns")
rbind(before, after) %>%
filter(r<5 & r>3) %>%
ggplot(aes(x=r, y=RDF, color=time)) +
geom_line(size=1) +
theme_classic() +
ggsave("RDF_before.pdf", width=14)
aft <- read_pdb2("NPT_30000ps.pdb") %>%
select(AtomName, ResNum, x, y, z) %>%
filter(AtomName=="SS"|AtomName=="CS2"|AtomName=="CS3") %>%
group_by(ResNum) %>%
nest()  %>%
mutate(temp = map(data,find_plane)) %>% print()
library("tidyverse")
library("Rpdb")
########################################################################################
########################################################################################
source("~/Dropbox/library/R_functions.R")
########################################################################################
########################################################################################
find_plane <- function(data){
x <- data$x
y <- data$y
z <- data$z
v1 <- c(x[2]-x[1], y[2]-y[1], z[2]-z[1])
v2 <- c(x[3]-x[1], y[3]-y[1], z[3]-z[1])
return(type(v1))
}
before <- read.table("pi_before.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(time="at t=0")
after <- read.table("pi_after.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(RDF=RDF*3) %>%
mutate(time="between 20ns and 30ns")
rbind(before, after) %>%
filter(r<5 & r>3) %>%
ggplot(aes(x=r, y=RDF, color=time)) +
geom_line(size=1) +
theme_classic() +
ggsave("RDF_before.pdf", width=14)
aft <- read_pdb2("NPT_30000ps.pdb") %>%
select(AtomName, ResNum, x, y, z) %>%
filter(AtomName=="SS"|AtomName=="CS2"|AtomName=="CS3") %>%
group_by(ResNum) %>%
nest()  %>%
mutate(temp = map(data,find_plane)) %>% print()
library("tidyverse")
library("Rpdb")
########################################################################################
########################################################################################
source("~/Dropbox/library/R_functions.R")
########################################################################################
########################################################################################
find_plane <- function(data){
x <- data$x
y <- data$y
z <- data$z
v1 <- c(x[2]-x[1], y[2]-y[1], z[2]-z[1])
v2 <- c(x[3]-x[1], y[3]-y[1], z[3]-z[1])
n <- tcrossprod(v1,v2)
return(n)
}
before <- read.table("pi_before.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(time="at t=0")
after <- read.table("pi_after.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(RDF=RDF*3) %>%
mutate(time="between 20ns and 30ns")
rbind(before, after) %>%
filter(r<5 & r>3) %>%
ggplot(aes(x=r, y=RDF, color=time)) +
geom_line(size=1) +
theme_classic() +
ggsave("RDF_before.pdf", width=14)
aft <- read_pdb2("NPT_30000ps.pdb") %>%
select(AtomName, ResNum, x, y, z) %>%
filter(AtomName=="SS"|AtomName=="CS2"|AtomName=="CS3") %>%
group_by(ResNum) %>%
nest()  %>%
mutate(temp = map(data,find_plane)) %>% print()
library("tidyverse")
library("Rpdb")
########################################################################################
########################################################################################
source("~/Dropbox/library/R_functions.R")
########################################################################################
########################################################################################
find_plane <- function(data){
x <- data$x
y <- data$y
z <- data$z
v1 <- c(x[2]-x[1], y[2]-y[1], z[2]-z[1])
v2 <- c(x[3]-x[1], y[3]-y[1], z[3]-z[1])
n <- tcrossprod(v1,v2)
n <- n / sqrt(sum(n^2))
return(n)
}
before <- read.table("pi_before.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(time="at t=0")
after <- read.table("pi_after.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(RDF=RDF*3) %>%
mutate(time="between 20ns and 30ns")
rbind(before, after) %>%
filter(r<5 & r>3) %>%
ggplot(aes(x=r, y=RDF, color=time)) +
geom_line(size=1) +
theme_classic() +
ggsave("RDF_before.pdf", width=14)
aft <- read_pdb2("NPT_30000ps.pdb") %>%
select(AtomName, ResNum, x, y, z) %>%
filter(AtomName=="SS"|AtomName=="CS2"|AtomName=="CS3") %>%
group_by(ResNum) %>%
nest()  %>%
mutate(temp = map(data,find_plane)) %>% print()
View(aft[[2]][[1]])
library("tidyverse")
library("Rpdb")
########################################################################################
########################################################################################
source("~/Dropbox/library/R_functions.R")
########################################################################################
########################################################################################
find_plane <- function(data){
x <- data$x
y <- data$y
z <- data$z
v1 <- c(x[2]-x[1], y[2]-y[1], z[2]-z[1])
v2 <- c(x[3]-x[1], y[3]-y[1], z[3]-z[1])
n <- tcrossprod(v1,v2)
n <- n / sqrt(sum(n^2))
return(n)
}
before <- read.table("pi_before.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(time="at t=0")
after <- read.table("pi_after.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(RDF=RDF*3) %>%
mutate(time="between 20ns and 30ns")
rbind(before, after) %>%
filter(r<5 & r>3) %>%
ggplot(aes(x=r, y=RDF, color=time)) +
geom_line(size=1) +
theme_classic() +
ggsave("RDF_before.pdf", width=14)
aft <- read_pdb2("NPT_30000ps.pdb") %>%
select(AtomName, ResNum, x, y, z) %>%
filter(AtomName=="SS"|AtomName=="CS2"|AtomName=="CS3") %>%
group_by(ResNum) %>%
nest()  %>%
mutate(plane = map(data,find_plane)) %>% print()
library("tidyverse")
library("Rpdb")
########################################################################################
########################################################################################
source("~/Dropbox/library/R_functions.R")
########################################################################################
########################################################################################
find_plane <- function(data){
x <- data$x
y <- data$y
z <- data$z
v1 <- c(x[2]-x[1], y[2]-y[1], z[2]-z[1])
v2 <- c(x[3]-x[1], y[3]-y[1], z[3]-z[1])
n <- tcrossprod(v1,v2)
n <- n / sqrt(sum(n^2))
return(n)
}
before <- read.table("pi_before.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(time="at t=0")
after <- read.table("pi_after.xvg", skip=24) %>%
rename(r=V1, RDF=V2) %>%
mutate(r=r*10) %>%
mutate(RDF=RDF*3) %>%
mutate(time="between 20ns and 30ns")
rbind(before, after) %>%
filter(r<5 & r>3) %>%
ggplot(aes(x=r, y=RDF, color=time)) +
geom_line(size=1) +
theme_classic() +
ggsave("RDF_before.pdf", width=14)
aft <- read_pdb2("NPT_30000ps.pdb") %>%
select(AtomName, Part, ResNum, x, y, z) %>%
filter(AtomName=="SS"|AtomName=="CS3"|AtomName=="CD4") %>%
group_by(ResNum) %>%
nest() %>%
mutate(norm = map(data,find_plane))
